通项公式
思路

之前的方法我们已经讨论了 f(n)f(n) 是齐次线性递推，根据递推方程 f(n) = f(n - 1) + f(n - 2)f(n)=f(n−1)+f(n−2)，我们可以写出这样的特征方程：

x^2 = x + 1
x 
2
 =x+1

求得 x_1 = \frac{1+\sqrt{5}}{2}x 
1
​	
 = 
2
1+ 
5
​	
 
​	
 ，x_2 = \frac{1-\sqrt{5}}{2}x 
2
​	
 = 
2
1− 
5
​	
 
​	
 ，设通解为 f(n) = c_1 x_1 ^n + c_2 x_2 ^ nf(n)=c 
1
​	
 x 
1
n
​	
 +c 
2
​	
 x 
2
n
​	
 ，代入初始条件 f(1) = 1f(1)=1，f(2) = 1f(2)=1，得 c_1 = \frac{1}{\sqrt{5}}c 
1
​	
 = 
5
​	
 
1
​	
 ，c_2 = -\frac{1}{\sqrt{5}}c 
2
​	
 =− 
5
​	
 
1
​	
 ，我们得到了这个递推数列的通项公式：

f(n) = \frac{1}{\sqrt{5}}\left[ \left(\frac{1+\sqrt{5}}{2}\right)^{n} - \left(\frac{1-\sqrt{5}}{2}\right)^{n} \right]
f(n)= 
5
​	
 
1
​	
 [( 
2
1+ 
5
​	
 
​	
 ) 
n
 −( 
2
1− 
5
​	
 
​	
 ) 
n
 ]

接着我们就可以通过这个公式直接求第 nn 项了。

代码

Java

public class Solution {
    public int climbStairs(int n) {
        double sqrt5 = Math.sqrt(5);
        double fibn = Math.pow((1 + sqrt5) / 2, n + 1) - Math.pow((1 - sqrt5) / 2, n + 1);
        return (int)(fibn / sqrt5);
    }
}
复杂度

时间复杂度：O(\log n)O(logn)，pow 方法将会用去 O(\log n)O(logn) 的时间。
空间复杂度：O(1)O(1)。

