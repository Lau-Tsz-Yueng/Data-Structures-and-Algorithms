给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

说明：
输入: [4,1,2,1,2]
输出: 4

## 土味解法 哈希表
class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        d = dict()
        for j in range(len(nums)):
            if nums[j] not in d.keys():
                d[nums[j]] = 1
            else:
                d[nums[j]] += 1
        a = list(d.values())
        b = list(d.keys())
        return b[a.index(1)]
      
## 高级位运算解法
原理： 异或运算 XOR运算
一个数和 0 做 XOR 运算等于本身：a⊕0 = a
一个数和其本身做 XOR 运算等于 0：a⊕a = 0
XOR 运算满足交换律和结合律：a⊕b⊕a = (a⊕a)⊕b = 0⊕b = b


class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        ans = 0
        for num in nums:
            ans ^= num
        return ans

话外: <![...], ![...]> 用于图片编辑
